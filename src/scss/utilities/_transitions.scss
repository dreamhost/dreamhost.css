/*

Transition Utilities

  These are pre-defined speeds and easings that can be used to override
  the default values for each property of an animation. Use them together
  with animation components from scss/components/_transitions.scss.

  Usage:
  <div class="tr-scale-up-hover tr-duration-xl tr-easing-cb-scale-out">
    This div scale up slowly on hover, with a cubic bezier scaling effect. The
    initial scaling up is defined in the components doc, while the utility
    classes override the component's default values.
  </div>

*/


/*
Timing
Timings are t-shirt sized. (s)mall is the shortest duration, and (xxl)tra
Large is the longest. Try to stick to these pre-defined timings. They help
us maintain consistency, usability, and accessibility. For immediate
(zero second) transitions, you can use .tr-duration-0.
*/

.tr-duration-0 {
  @include tr-duration(0s);
}

.tr-duration-s {
  @include tr-duration($tr-fastest);
}

.tr-duration-m {
  @include tr-duration($tr-fast);
}

.tr-duration-l {
  @include tr-duration($tr-duration);
}

.tr-duration-xl {
  @include tr-duration($tr-slow);
}

.tr-duration-xxl {
  @include tr-duration($tr-slowest);
}


/*
Easing
Linear, ease-in-out, and a few pre-definted cubic-bezier curves that,
well, just look pimp.
*/

.tr-easing-linear {
  @include tr-easing($a-easing-linear);
}

.tr-easing-ease {
  @include tr-easing($a-easing);
}

.tr-easing-cb-scale-in {
  @include tr-easing($a-easing-cb-scale-in);
}

.tr-easing-cb-scale-out {
  @include tr-easing($a-easing-cb-scale-out);
}

.tr-easing-cb-scale-up {
  @include tr-easing($a-easing-cb-scale-up);
}
